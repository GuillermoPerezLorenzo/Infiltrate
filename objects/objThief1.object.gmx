<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprThief1Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i=100
j=0
press=false
movimiento=false
primerpunto=false
covered = false

firstCollision = false
global.key1 = false

image_speed = 0.1
//global.path1 = path_add();
//path_add_point(path1,self.x,self.y,100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Primer toque en la pantalla para trazar camino
if device_mouse_check_button(0, mb_any) and !movimiento and !primerpunto{
    if(distance_to_point(device_mouse_x(0),device_mouse_y(0))&lt;30){//rango inicio del camino (entorno al personaje)
        path_add_point(path1,device_mouse_x(0),device_mouse_y(0),100);//Primer punto del camino
        primerpunto=true//Inicialización del camino
    }
}
//Definición del camino
if device_mouse_check_button(0, mb_any) and !movimiento and primerpunto{
    press=true;
    instance_create(device_mouse_x(0),device_mouse_y(0),object0);
    path_add_point(path1,device_mouse_x(0),device_mouse_y(0),100);
}
//Comienzo del movimiento
if !device_mouse_check_button(0, mb_any) and !movimiento {
    if(path_exists(path1)){
        movimiento=true;
        path_insert_point(path1,0,self.x,self.y,100);
        path_start(path1,10,path_action_stop,0);
    }
}
//Movimiento
if !device_mouse_check_button(0, mb_any) and movimiento{
    if (sprite_index != sprThief1Idle) {
        sprite_index = sprThief1Idle
    }
    if covered {//Llegamos a una pared
        movimiento=false;
        primerpunto=false;
        covered = false
        path_clear_points(path1);
    }
    else if firstCollision{//Llegamos a un objeto móvil
        movimiento = false
        primerpunto = false
        firstCollision = false
        path_clear_points(path1)       
    }
    else if(path_index==-1){//Terminamos el camino
        movimiento=false;
        primerpunto=false;
        path_clear_points(path1);
    }else{//Dirección del movimiento
        direction = point_direction(x,y,path_get_x(path1,path_position+0.1),path_get_y(path1,path_position+0.1));
        image_angle=direction-90;
    }
}



/*
if (!collision_line(x, y, dest_x, dest_y, objCover, false, false)) {
    if point_distance(x, y, dest_x, dest_y) &gt; 2 {
        direction = point_direction(x, y, dest_x, dest_y) - 90
        image_angle = direction
        
        if (sprite_index != sprThief1Idle and covered) {
            sprite_index = sprThief1Idle
            covered = false
        }

        move_towards_point(dest_x, dest_y, 2)
    } else {
        x = dest_x
        y = dest_y
        speed = 0
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMove">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//La primera vez que colisiona contra un objeto móvil muestra unas flechas
if(!firstCollision){
    firstCollision = true
    
    instance_create(other.x,other.y-other.sprite_height/2,objArrowUp)
    instance_create(other.x,other.y+other.sprite_height/2,objArrowDown)
    instance_create(other.x+other.sprite_width/2,other.y,objArrowRigth)
    instance_create(other.x-other.sprite_width/2,other.y,objArrowLeft)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCover">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not covered) {
    if (sprite_index != sprThief1Covered1) {
        sprite_index = sprThief1Covered1
    }
    
    covered = true;
    //speed = 0
        
    if (place_meeting(x - 5, y, objCover)) {
        direction = 270
        image_angle = direction
    } else if (place_meeting(x, y + 5, objCover)) {
        direction = 0
        image_angle = direction
    } else if (place_meeting(x + 5, y, objCover)) {
        direction = 90
        image_angle = direction
    } else {
        direction = 180
        image_angle = direction
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
